CREATE TABLE Journals (
	ISSN VARCHAR(20) PRIMARY KEY,
	name VARCHAR(100) UNIQUE NOT NULL
	
);

CREATE TABLE Volumes (
	volumeNum INT AUTO_INCREMENT,
	ISSN VARCHAR(20),
	publicationYear SMALLINT,
	PRIMARY KEY (volumeNum, ISSN),
	FOREIGN KEY (ISSN) REFERENCES Journals(ISSN)
		ON DELETE CASCADE
);

CREATE TABLE Editions (
	editionID INT PRIMARY KEY AUTO_INCREMENT,
	editionNum TINYINT,
	publicationMonth TINYINT,
	volumeNum INT,
	ISSN VARCHAR(20),
	FOREIGN KEY (volumeNum, ISSN) REFERENCES Volumes(volumeNum, ISSN)
		ON DELETE CASCADE
);

CREATE TABLE Users (
	email VARCHAR(80) PRIMARY KEY,
	forenames VARCHAR(150),
	surname VARCHAR(120),
	university VARCHAR(100),
	password VARCHAR(200) NOT NULL
);

CREATE TABLE JournalEditors (
	ISSN VARCHAR(20),
	email VARCHAR(80),
	isChief BOOL NOT NULL DEFAULT FALSE,
	PRIMARY KEY(ISSN, email),
	FOREIGN KEY(email) REFERENCES Users(email)
		ON DELETE CASCADE,
	FOREIGN KEY(ISSN) REFERENCES Journals(ISSN)
		ON DELETE CASCADE
);

CREATE TABLE Submissions (
	submissionID INT PRIMARY KEY AUTO_INCREMENT,
	title VARCHAR(1000) NOT NULL,
	abstract VARCHAR(2000) NOT NULL,
	draftLink VARCHAR(400) NOT NULL
);

CREATE TABLE Authorships (
	email VARCHAR(80),
	submissionID INT,
	isMain BOOL NOT NULL DEFAULT FALSE,
	PRIMARY KEY(email, submissionID),
	FOREIGN KEY(email) REFERENCES Users(email)
		ON DELETE NO ACTION,
	FOREIGN KEY(submissionID) REFERENCES Submissions(submissionID)
		ON DELETE CASCADE
);

CREATE TABLE AcceptedArticles (
	articleID INT PRIMARY KEY AUTO_INCREMENT,
	startingPage INT UNSIGNED,
	endingPage INT UNSIGNED,
	articleFile MEDIUMBLOB NOT NULL,
	editionID INT,
	submissionID INT NOT NULL,
	FOREIGN KEY(submissionID) REFERENCES Submissions(submissionID)
		ON DELETE CASCADE,
	FOREIGN KEY(editionID) REFERENCES Editions(editionID)
		ON DELETE SET NULL
);

CREATE TABLE Reviews (
	reviewID INT PRIMARY KEY AUTO_INCREMENT,
	summary VARCHAR(2000) NOT NULL,
	verdict VARCHAR(20) NOT NULL,
	submissionID INT NOT NULL,
	reviewerEmail VARCHAR(80) NOT NULL,
	articleOfReviewer INT,
	
	FOREIGN KEY(submissionID) REFERENCES Submissions(submissionID)
		ON DELETE CASCADE,
	FOREIGN KEY(reviewerEmail) REFERENCES Users(email)
		ON DELETE CASCADE,
	FOREIGN KEY(articleOfReviewer) REFERENCES Submissions(submissionID)
		ON DELETE SET NULL
);

CREATE TABLE Critiques (
	critiqueID INT PRIMARY KEY AUTO_INCREMENT,
	reviewID INT NOT NULL,
	description VARCHAR(250) NOT NULL,
	reply VARCHAR(250) DEFAULT NULL,
	FOREIGN KEY(reviewID) REFERENCES Reviews(reviewID)
		ON DELETE CASCADE
);


